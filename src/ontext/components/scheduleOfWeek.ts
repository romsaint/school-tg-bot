import TelegramBot from "node-telegram-bot-api";
import { bot } from "../..";
import { client } from "../../db/main";
import { Lessons } from "../../db/entity/lessons.entity";
import { onBack } from "./onBack";
import { getStartLessons } from "../../utils/getStartLessons";

export async function scheduleOfWeek(msg: TelegramBot.Message) {
    const chatId = msg.chat.id

    const schedule: Lessons[] = (await client.query(`
        SELECT * FROM lessons
        WHERE user_id = $1
        ORDER BY day_of_week 
    `, [msg.from?.id])).rows;

    // –ì—Ä—É–ø–ø–∏—Ä—É–µ–º —É—Ä–æ–∫–∏ –ø–æ –¥–Ω—è–º –Ω–µ–¥–µ–ª–∏
    const groupedSchedule: { [key: string]: Lessons[] } = {};

    for (const lesson of schedule) {
        const day = lesson.day_of_week; // –ü–æ–ª—É—á–∞–µ–º –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏
        if (!groupedSchedule[day]) {
            groupedSchedule[day] = []; // –°–æ–∑–¥–∞–µ–º –º–∞—Å—Å–∏–≤ –¥–ª—è —ç—Ç–æ–≥–æ –¥–Ω—è, –µ—Å–ª–∏ –µ–≥–æ –µ—â–µ –Ω–µ—Ç
        }
        groupedSchedule[day].push(lesson); // –î–æ–±–∞–≤–ª—è–µ–º —É—Ä–æ–∫ –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π –¥–µ–Ω—å
    }

    if (schedule.length === 0) {
        await bot.sendMessage(chatId, '–ù–∞ —Å–µ–≥–æ–¥–Ω—è —É –≤–∞—Å –Ω–µ—Ç —É—Ä–æ–∫–æ–≤');
        onBack(msg);
        return;
    }


    for (const dayOfWeek in groupedSchedule) {
        const lessons = groupedSchedule[dayOfWeek]; // –£—Ä–æ–∫–∏ –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ –¥–Ω—è –Ω–µ–¥–µ–ª–∏
        const scheduleOfDay = `–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ ${dayOfWeek === '–°—Ä–µ–¥–∞' || dayOfWeek === '–ü—è—Ç–Ω–∏—Ü–∞' || dayOfWeek === '–°—É–±–±–æ—Ç–∞' ? dayOfWeek.slice(0, dayOfWeek.length - 1) + '—É' : dayOfWeek}`.toUpperCase();
        let scheduleText = `\`\`\`\nüìÖ${scheduleOfDay}\n\`\`\`\n`;

        const date = await getStartLessons(); // –ù–∞—á–∞–ª—å–Ω–æ–µ –≤—Ä–µ–º—è —É—Ä–æ–∫–æ–≤
        let d = new Date(date); // –í—Ä–µ–º—è –Ω–∞—á–∞–ª–∞ –ø–µ—Ä–≤–æ–≥–æ —É—Ä–æ–∫–∞

        for (let i = 0; i < lessons.length; i++) {
            const d2 = new Date(d.getTime() + lessons[0].lesson_time * 60000);
            let timeStart = d.toLocaleTimeString().slice(0, 5);
            let lessonName = lessons[i].lesson.toUpperCase()
            let timeEnd = d2.toLocaleTimeString().slice(0, 5)

            if (i === 1 || i === 2) {
                // –£—Ä–æ–∫–∏ —Å 20-–º–∏–Ω—É—Ç–Ω–æ–π –ø–µ—Ä–µ–º–µ–Ω–æ–π
                scheduleText += `\`\`\`${i + 1}. ${lessonName}${!lessons[i].homework ? ' - –ù–µ –∑–∞–¥–∞–Ω–æ' :` - ${lessons[i].homework}` }\`\`\`\nüïí –° ${timeStart} - ${timeEnd}, –ø–µ—Ä–µ–º–µ–Ω–∞ ${20} –º–∏–Ω—É—Ç\n`;
                d.setMinutes(d.getMinutes() + lessons[i].lesson_time + 20); // –£—Ä–æ–∫ + –ø–µ—Ä–µ–º–µ–Ω–∞
            } else if (i === 3) {
                // –£—Ä–æ–∫ —Å 10-–º–∏–Ω—É—Ç–Ω–æ–π –ø–µ—Ä–µ–º–µ–Ω–æ–π –∏ —Å—Ç–æ–ª–æ–≤–æ–π
                scheduleText += `\`\`\`${i + 1}. ${lessonName}${!lessons[i].homework ? ' - –ù–µ –∑–∞–¥–∞–Ω–æ' :` - ${lessons[i].homework}` }\`\`\`\nüïí –° ${timeStart} - ${timeEnd}, –ø–µ—Ä–µ–º–µ–Ω–∞ ${10} –º–∏–Ω—É—Ç\nüçΩ –ü–æ—Å–ª–µ —ç—Ç–æ–≥–æ —É—Ä–æ–∫–∞ *—Å—Ç–æ–ª–æ–≤–∞—è*\n`;
                d.setMinutes(d.getMinutes() + lessons[i].lesson_time + 10); // –£—Ä–æ–∫ + –ø–µ—Ä–µ–º–µ–Ω–∞
            } else {
                // –û—Å—Ç–∞–ª—å–Ω—ã–µ —É—Ä–æ–∫–∏ —Å 10-–º–∏–Ω—É—Ç–Ω–æ–π –ø–µ—Ä–µ–º–µ–Ω–æ–π
                scheduleText += `\`\`\`${i + 1}. ${lessonName}${!lessons[i].homework ? ' - –ù–µ –∑–∞–¥–∞–Ω–æ' :` - ${lessons[i].homework}` }\`\`\`\nüïí –° ${timeStart} - ${timeEnd}, –ø–µ—Ä–µ–º–µ–Ω–∞ ${10} –º–∏–Ω—É—Ç\n`;
                d.setMinutes(d.getMinutes() + lessons[i].lesson_time + 10); // –£—Ä–æ–∫ + –ø–µ—Ä–µ–º–µ–Ω–∞
            }
        }

        await bot.sendMessage(chatId, dayOfWeek);
        await bot.sendMessage(chatId, scheduleText, {
            parse_mode: 'Markdown', // –ò—Å–ø–æ–ª—å–∑—É–µ–º MarkdownV1
            reply_markup: {
                keyboard: [
                    [{ text: "–ù–∞–∑–∞–¥" }]
                ],
                resize_keyboard: true
            }
        });
    }

}